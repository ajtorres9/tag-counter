parameters:
  displayName: ''
  os: ''
  vmImage: ''
jobs:
  - job: test_${{ parameters.os }}
    displayName: ${{ parameters.displayName }}
    dependsOn:
      - static_analysis_${{ parameters.os }}
    pool:
      vmImage: ${{ parameters.vmImage }}
    variables:
      - name: ARGS
        value:
      - ${{ if eq(parameters.os, 'linux') }}:
          - name: ARGS
            value: --coverage --coverageDirectory $(COVERAGE_DIRECTORY)
          - name: COVERAGE_DIRECTORY
            value: coverage
      - name: REPORTS_DIRECTORY
        value: test/${{ parameters.os }}
    steps:
      - task: NodeTool@0
        displayName: Install Node
        inputs:
          versionSpec: $(NODE_VERSION)
      - script: npm install
        displayName: Install Node dependencies
      - script: npm run --silent test-units -- $(ARGS) --runInBand --reporters default jest-junit
        displayName: Test units
        env:
          JEST_JUNIT_OUTPUT: $(REPORTS_DIRECTORY)/test-units.xml
      - ${{ if eq(parameters.os, 'linux') }}:
          - script: npx codecov -t $(CODECOV_TOKEN)
            displayName: Publish code coverage results
          - publish: $(COVERAGE_DIRECTORY)
            displayName: Publish coverage artifact
            artifact: coverage
      - publish: $(REPORTS_DIRECTORY)
        displayName: Publish reports artifact
        artifact: test-${{ parameters.os }}
      - task: PublishTestResults@2
        displayName: Publish tests results
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: '**/*.xml'
          searchFolder: $(System.DefaultWorkingDirectory)/$(REPORTS_DIRECTORY)
