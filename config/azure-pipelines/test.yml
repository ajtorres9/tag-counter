parameters:
  displayName: ''
  os: ''
  vmImage: ''
jobs:
  - job: test_${{ parameters.os }}
    displayName: ${{ parameters.displayName }}
    dependsOn:
      - static_analysis_${{ parameters.os }}
    pool:
      vmImage: ${{ parameters.vmImage }}
    variables:
      - name: args
        value:
      - ${{ if eq(parameters.os, 'linux') }}:
          - name: args
            value: --coverage --coverageDirectory $(coverageDirectory)
          - name: coverageDirectory
            value: coverage
      - name: reportsDirectory
        value: test/${{ parameters.os }}
    steps:
      - task: NodeTool@0
        displayName: Install Node
        inputs:
          versionSpec: $(nodeVersion)
      - script: npm install
        displayName: Install Node dependencies
      - script: npm run --silent test-units -- $(args) --runInBand --reporters default jest-junit
        displayName: Run tests
        env:
          JEST_JUNIT_OUTPUT: $(reportsDirectory)/test-units.xml
      - ${{ if eq(parameters.os, 'linux') }}:
          # - script: npx codecov --token=$(codecovToken)
          #   displayName: Publish code coverage results
          - publish: $(coverageDirectory)
            displayName: Publish coverage artifact
            artifact: coverage
      - publish: $(reportsDirectory)
        displayName: Publish reports artifact
        artifact: test-${{ parameters.os }}
      # - task: PublishTestResults@2
      #   displayName: Publish tests results
      #   condition: succeededOrFailed()
      #   inputs:
      #     testResultsFiles: '**/*.xml'
      #     searchFolder: $(System.DefaultWorkingDirectory)/$(reportsDirectory)
